

from TreeNode import TreeNode


class MalwareDetector:
    def __init__(self):
# --creates a root node for the tree, initialized with None value.        
        self.root = TreeNode(None)


#---adds a malware signature to the tree
# <while>--signature perameter is // one line  get books signatures        
    def add_signature(self, signature):
        node = self.root
        for char in signature:
            found_child = None
            for child in node.children:
                if child.value == char:
                    found_child = child
                    break
            if found_child is None:
                new_node = TreeNode(char)
                node.children.append(new_node)
                node = new_node
            else:
                node = found_child
        node.children.append(TreeNode('*'))  # Mark the end of a signature



    def is_infected(self, content):
        node = self.root
        for char in content:
            found_child = None
            for child in node.children:
                if child.value == char:
                    found_child = child
                    break
            if found_child is None:
                node = self.root  # Start over if not a part of a signature
            else:
                node = found_child
                for child in node.children:
                    if child.value == '*':
                        return True  # Found a malware signature
        return False